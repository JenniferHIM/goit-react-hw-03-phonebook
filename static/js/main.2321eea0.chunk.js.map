{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onRemoveContact","className","styles","taskList","map","contact","taskList_item","name","number","taskList_button","type","onClick","id","Filter","value","onChangeFilter","inputText","onChange","e","target","ContactForm","state","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","this","taskEditor","onSubmit","taskEditor_label","taskEditor_input","placeholder","pattern","title","required","taskEditor_button","Component","App","filter","addContact","task","cont","includes","alert","length","uuidv4","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","removeContact","contactId","checkStorage","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2321eea0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputText\":\"Filter_inputText__3fPc0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskEditor\":\"ContactForm_taskEditor__89zoY\",\"taskEditor_label\":\"ContactForm_taskEditor_label__257Es\",\"taskEditor_input\":\"ContactForm_taskEditor_input__39wcL\",\"taskEditorinput\":\"ContactForm_taskEditorinput__3iSEW\",\"taskEditor_button\":\"ContactForm_taskEditor_button__3LSmE\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n    <ul className={styles.taskList}>\r\n        {contacts.map((contact) => (\r\n            <li className={styles.taskList_item} key={contact.id}>\r\n                {contact.name + \":  \" + contact.number}\r\n                {<button\r\n                    className={styles.taskList_button}\r\n                    type=\"button\"\r\n                    name=\"delete\"\r\n                    onClick={() => onRemoveContact(contact.id)}\r\n                >\r\n                    Delete\r\n                </button>\r\n                }\r\n            </li>\r\n        ))}\r\n    \r\n    </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n    onRemoveContact: PropTypes.func.isRequired,\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired\r\n    })),\r\n    \r\n}\r\n\r\nexport default ContactList;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n    return (\r\n        <div >\r\n            Find contact by name\r\n            <input\r\n                className = {styles.inputText}\r\n                type=\"text\"\r\n                value={value}\r\n                onChange = {(e) => onChangeFilter(e.target.value)} />\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChangeFilter: PropTypes.func.isRequired\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.taskEditor} onSubmit={this.handleSubmit}>\r\n        <label className={styles.taskEditor_label}>\r\n          Name\r\n          <input\r\n            className={styles.taskEditor_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"input name\"\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n\t\t\t\t\t\ttitle=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n\t\t\t\t\t\trequired\r\n          />\r\n        </label>\r\n        <label className={styles.taskEditor_label}>\r\n          Number\r\n          <input\r\n            className={styles.taskEditor_input}\r\n            type=\"tel\"\r\n            value={number}\r\n            name=\"number\"\r\n            placeholder=\"input phone number\"\r\n            onChange={this.handleChange}\r\n            required\r\n            \r\n          />\r\n        </label>\r\n        <button className={styles.taskEditor_button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n  \r\n};","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n    componentDidMount() {\n    const checkStorage = localStorage.getItem('contacts');\n    if (checkStorage) {\n      this.setState({ contacts: JSON.parse(checkStorage) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  addContact = (task) => {\n    const searchSameName = this.state.contacts\n      .map((cont) => cont.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      alert(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        ...task,\n        id: uuidv4(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n \n    removeContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onRemoveContact={this.removeContact}\n        />\n        \n      </div>\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskList\":\"ContactList_taskList__3me4j\",\"TaskList_item\":\"ContactList_TaskList_item__2tKUR\",\"taskList_item\":\"ContactList_taskList_item__2xL0h\",\"completed\":\"ContactList_completed__2d6rC\",\"taskList_text\":\"ContactList_taskList_text__2MuD7\",\"taskList_button\":\"ContactList_taskList_button__1UkYJ\"};"],"sourceRoot":""}